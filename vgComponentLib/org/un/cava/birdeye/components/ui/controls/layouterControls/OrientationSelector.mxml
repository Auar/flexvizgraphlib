<?xml version="1.0" encoding="utf-8"?>
<mx:ComboBox xmlns:mx="http://www.adobe.com/2006/mxml"
	height="20"
	width="95%"
	color="#CCCCCC"
	prompt="Select the orientation"
	toolTip="Select the orientation of the layout"
	creationComplete="initData()"
	change="setOrientation()" >
	
	<mx:ArrayCollection id="orvalues">
		<mx:String>Top Down</mx:String>
		<mx:String>Bottom Up</mx:String>
		<mx:String>Left-Right</mx:String>
		<mx:String>Right-Left</mx:String>
	</mx:ArrayCollection>
	
	<mx:Script>	
		<![CDATA[
			import org.un.cava.birdeye.utils.GlobalParams;
			import org.un.flex.graphLayout.layout.HierarchicalLayouter;
			import org.un.flex.graphLayout.visual.IVisualGraph;
			import org.un.flex.graphLayout.layout.ILayoutAlgorithm;
			
			/**
			 * When enabling or disabling this component, we also
			 * perform some specific tasks.
			 * Attention do completely disable interaction
			 * there is also the mouseEnabled property.
			 * 
			 * @inheritDoc
			 * */
			override public function set enabled(e:Boolean):void {
				if(e == true) {
					this.setStyle("color",0x000000);
					this.alpha=1;
				} else {
					this.setStyle("color",0xCCCCCC);
					this.alpha=0.3;
				}
				/* call superclass (ComboBox) */
				super.enabled = e;
			}
			
			/**
			 * Set the orientation value in the layouter
			 * according to the current selected value
			 * */
			public function setOrientation():void {
				
				var or:String;
				var hlayouter:HierarchicalLayouter;
				var vgraph:IVisualGraph = GlobalParams.vgraph;
				
				/* check if we have a layouter at all */
				if(GlobalParams.layouter == null) {
					trace("Cannot select orientation on null layouter");
					return;
				}
				
				/* check if it is a supported layouter (currently Hierarchical only) */
				if(!GlobalParams.layouter is HierarchicalLayouter) {
					trace("Orientation selection is only available in HierarchicalLayouter");
					return;
				}
				
				/* set the local layouter reference */
				hlayouter = GlobalParams.layouter as HierarchicalLayouter;
				
				/* get the currently selected orientation */
				or = this.selectedItem as String;
					
				switch(or) {
					case "Top Down":
						hlayouter.orientation = hlayouter.ORIENT_TOP_DOWN;
						break;
					case "Bottom Up":
						hlayouter.orientation = hlayouter.ORIENT_BOTTOM_UP;
						break;
					case "Left-Right":
						hlayouter.orientation = hlayouter.ORIENT_LEFT_RIGHT;
						break;
					case "Right-Left":
						hlayouter.orientation = hlayouter.ORIENT_RIGHT_LEFT;
						break;
					default:
						trace("Illegal orientation selected:"+or);
						return;
						break;
				}
				
				hlayouter.layoutChanged = true;
				
				if(vgraph != null) {
					vgraph.draw();
				} else {
					trace("orientation changed, but no valid vgraph in GlobalParams, not redrawing!");
				}
			}
			
			/**
			 * initialise the selection data.
			 * It is a bit unclear, why this seems to be necessary.
			 * */
			private function initData():void {
				this.dataProvider = orvalues;
			}
			
			
		]]>
	</mx:Script>
</mx:ComboBox>
